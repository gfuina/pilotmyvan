import mongoose from 'mongoose';
import { config } from 'dotenv';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';
import { readFileSync } from 'fs';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Load environment variables from .env
const envPath = join(__dirname, '../.env');
config({ path: envPath });

const MONGODB_URI = process.env.MONGODB_URI;

if (!MONGODB_URI) {
  console.error('‚ö†Ô∏è  MONGODB_URI not found in .env');
  console.error('Trying to read .env manually...');
  try {
    const envContent = readFileSync(envPath, 'utf-8');
    const match = envContent.match(/MONGODB_URI=(.+)/);
    if (match) {
      process.env.MONGODB_URI = match[1].trim().replace(/["']/g, '');
      console.log('‚úÖ MONGODB_URI loaded manually');
    } else {
      throw new Error('MONGODB_URI not found in .env file');
    }
  } catch (err) {
    throw new Error(`Cannot load MONGODB_URI: ${err.message}`);
  }
}

// Connect to MongoDB
await mongoose.connect(process.env.MONGODB_URI);
console.log('‚úÖ Connected to MongoDB');

// Define schemas
const EquipmentSchema = new mongoose.Schema({
  name: String,
  description: String,
  categoryId: mongoose.Schema.Types.ObjectId,
  vehicleBrands: [mongoose.Schema.Types.ObjectId],
  equipmentBrands: [mongoose.Schema.Types.ObjectId],
  photos: [String],
  manuals: [{
    title: String,
    url: String,
    isExternal: Boolean,
  }],
  notes: String,
  isUserContributed: Boolean,
  contributedBy: mongoose.Schema.Types.ObjectId,
  status: String,
  approvedBy: mongoose.Schema.Types.ObjectId,
  approvedAt: Date,
  rejectionReason: String,
}, { timestamps: true });

const MaintenanceSchema = new mongoose.Schema({
  equipmentId: mongoose.Schema.Types.ObjectId,
  name: String,
  type: String,
  priority: String,
  difficulty: String,
  recurrence: {
    time: {
      value: Number,
      unit: String,
    },
    kilometers: Number,
  },
  conditions: [String],
  description: String,
  instructions: String,
  photos: [String],
  videos: [String],
  parts: [{
    name: String,
    reference: String,
    quantity: Number,
    estimatedCost: Number,
    purchaseLink: String,
  }],
  estimatedDuration: Number,
  estimatedCost: Number,
  tags: [String],
  isOfficial: Boolean,
  source: String,
  isUserContributed: Boolean,
  contributedBy: mongoose.Schema.Types.ObjectId,
  status: String,
}, { timestamps: true });

const Equipment = mongoose.models.Equipment || mongoose.model('Equipment', EquipmentSchema);
const Maintenance = mongoose.models.Maintenance || mongoose.model('Maintenance', MaintenanceSchema);

try {
  // Category ID pour "Eau et sanitaires" - √† v√©rifier dans votre base
  const categoryId = new mongoose.Types.ObjectId('68f35041be04ebdaad786b36');

  // 1. Cr√©er l'√©quipement "Cuve √† eau propre"
  const cuveEau = await Equipment.create({
    name: 'Cuve √† eau propre',
    description: 'R√©servoir d\'eau potable permettant de stocker l\'eau propre √† bord du camping-car, fourgon ou van am√©nag√©. Capacit√© variable selon les mod√®les (de 40 √† 200 litres). Essentiel pour l\'autonomie en eau (cuisine, douche, lavabo).',
    categoryId: categoryId,
    vehicleBrands: [],
    equipmentBrands: [],
    photos: [],
    manuals: [],
    notes: 'Capacit√© et mat√©riau varient selon les v√©hicules. N√©cessite un entretien r√©gulier pour garantir la qualit√© de l\'eau.',
    isUserContributed: false,
    status: 'approved',
  });

  console.log(`‚úÖ √âquipement cr√©√©: ${cuveEau.name} (ID: ${cuveEau._id})`);

  // 2. Cr√©er les maintenances associ√©es
  const maintenances = [
    {
      equipmentId: cuveEau._id,
      name: 'D√©sinfection compl√®te de la cuve √† eau',
      type: 'cleaning',
      priority: 'critical',
      difficulty: 'easy',
      recurrence: {
        time: {
          value: 6,
          unit: 'months',
        },
      },
      conditions: [
        'Avant la saison de voyage',
        'Apr√®s hivernage',
        'Si go√ªt ou odeur d√©sagr√©able',
      ],
      description: 'D√©sinfection de la cuve √† eau propre pour √©liminer bact√©ries, algues et biofilm. Indispensable pour garantir une eau saine.',
      instructions: '1. Vidanger compl√®tement la cuve\n2. Pr√©parer une solution d√©sinfectante :\n   - Option 1 : 1 litre d\'eau de Javel pour 100 litres d\'eau\n   - Option 2 : Produit d√©sinfectant sp√©cifique camping-car (Puriclean, Aqua Kem, etc.)\n3. Remplir la cuve avec la solution d√©sinfectante\n4. Ouvrir tous les robinets jusqu\'√† ce que l\'eau javellis√©e sorte\n5. Laisser agir 12 heures minimum\n6. Vidanger compl√®tement\n7. Rincer 2-3 fois √† l\'eau claire\n8. Ouvrir les robinets pour rincer les canalisations\n9. Remplir avec de l\'eau propre et v√©rifier l\'absence d\'odeur de chlore',
      photos: [],
      videos: [],
      parts: [],
      estimatedDuration: 30,
      estimatedCost: 5,
      tags: ['Eau', 'Hygi√®ne', 'D√©sinfection', 'Sant√©'],
      isOfficial: true,
      source: 'Bonnes pratiques camping-car',
      isUserContributed: false,
      status: 'approved',
    },
    {
      equipmentId: cuveEau._id,
      name: 'Vidange compl√®te pour hivernage',
      type: 'drain',
      priority: 'critical',
      difficulty: 'easy',
      recurrence: {
        time: {
          value: 1,
          unit: 'years',
        },
      },
      conditions: [
        'Avant temp√©ratures n√©gatives',
        'Avant p√©riode d\'immobilisation prolong√©e',
        'Avant stockage hivernal',
      ],
      description: 'Vidange compl√®te du circuit d\'eau pour √©viter le gel et les d√©g√¢ts caus√©s par l\'expansion de l\'eau gel√©e.',
      instructions: '‚ö†Ô∏è OBLIGATOIRE si temp√©ratures < 0¬∞C\n\n1. Vidanger la cuve d\'eau propre via la vanne de vidange\n2. Ouvrir tous les robinets (chaud et froid)\n3. Vidanger le chauffe-eau\n4. Purger la pompe √† eau\n5. Laisser tous les robinets ouverts\n6. Incliner le v√©hicule si possible pour √©vacuer l\'eau r√©siduelle\n7. Option : Injecter de l\'antigel sp√©cial camping-car dans les canalisations\n8. Laisser les robinets ouverts pendant l\'hiver\n\nüí° L\'antigel sp√©cial camping-car (non toxique) prot√®ge les r√©sidus d\'eau',
      photos: [],
      videos: [],
      parts: [],
      estimatedDuration: 20,
      estimatedCost: 0,
      tags: ['Hivernage', 'Gel', 'Protection', 'Obligatoire'],
      isOfficial: true,
      source: 'Bonnes pratiques camping-car',
      isUserContributed: false,
      status: 'approved',
    },
    {
      equipmentId: cuveEau._id,
      name: 'Inspection de la cuve et recherche de fuites',
      type: 'inspection',
      priority: 'important',
      difficulty: 'easy',
      recurrence: {
        time: {
          value: 6,
          unit: 'months',
        },
      },
      conditions: [
        'Avant la saison',
        'Si baisse de niveau anormale',
        'Apr√®s stockage prolong√©',
      ],
      description: 'Contr√¥le visuel de l\'√©tat de la cuve, des connexions et recherche de fuites √©ventuelles.',
      instructions: '1. Remplir la cuve compl√®tement\n2. Inspecter visuellement la cuve sous le v√©hicule :\n   - Fissures\n   - D√©formations\n   - Traces d\'humidit√©\n3. V√©rifier tous les raccords et colliers de serrage\n4. Contr√¥ler la vanne de vidange (√©tanch√©it√©)\n5. V√©rifier les durites (craquelures, durcissement)\n6. Tester le capteur de niveau d\'eau\n7. V√©rifier l\'absence de fuite au niveau de la trappe de remplissage\n8. Resserrer les colliers si n√©cessaire\n9. Remplacer les durites endommag√©es',
      photos: [],
      videos: [],
      parts: [],
      estimatedDuration: 30,
      estimatedCost: 0,
      tags: ['Contr√¥le', 'Fuite', 'Pr√©vention'],
      isOfficial: true,
      source: 'Bonnes pratiques camping-car',
      isUserContributed: false,
      status: 'approved',
    },
    {
      equipmentId: cuveEau._id,
      name: 'Rin√ßage apr√®s p√©riode d\'inutilisation',
      type: 'cleaning',
      priority: 'important',
      difficulty: 'easy',
      recurrence: {
        time: {
          value: 2,
          unit: 'months',
        },
      },
      conditions: [
        'Apr√®s plus de 2 semaines sans utilisation',
        'Eau stagnante',
      ],
      description: 'Rin√ßage du circuit d\'eau apr√®s une p√©riode d\'inutilisation pour √©liminer l\'eau stagnante.',
      instructions: '1. Vidanger compl√®tement la cuve\n2. Remplir avec de l\'eau fra√Æche\n3. Ouvrir tous les robinets et laisser couler 2-3 minutes\n4. Vidanger √† nouveau\n5. Remplir avec de l\'eau propre\n6. Laisser couler √† chaque robinet jusqu\'√† eau claire\n7. Sentir et go√ªter (si eau potable) pour v√©rifier l\'absence de go√ªt\n\nüí° Si go√ªt/odeur d√©sagr√©able persiste : d√©sinfection compl√®te n√©cessaire',
      photos: [],
      videos: [],
      parts: [],
      estimatedDuration: 15,
      estimatedCost: 0,
      tags: ['Eau', 'Rin√ßage', 'Hygi√®ne'],
      isOfficial: true,
      source: 'Bonnes pratiques camping-car',
      isUserContributed: false,
      status: 'approved',
    },
    {
      equipmentId: cuveEau._id,
      name: 'Nettoyage ou remplacement du filtre √† eau',
      type: 'cleaning',
      priority: 'recommended',
      difficulty: 'easy',
      recurrence: {
        time: {
          value: 3,
          unit: 'months',
        },
      },
      conditions: [
        'Si filtre install√©',
        'Selon qualit√© de l\'eau',
      ],
      description: 'Entretien du filtre √† eau install√© sur le circuit d\'eau propre.',
      instructions: '1. Fermer l\'arriv√©e d\'eau\n2. D√©visser le bol du filtre avec la cl√© fournie\n3. Retirer la cartouche filtrante\n4. Selon le type :\n   - Filtre lavable : rincer sous l\'eau\n   - Cartouche jetable : remplacer\n5. Nettoyer le bol\n6. V√©rifier le joint, remplacer si n√©cessaire\n7. Installer la cartouche neuve ou propre\n8. Revisser le bol\n9. Ouvrir l\'eau progressivement\n10. V√©rifier l\'absence de fuite\n11. Purger l\'air en ouvrant un robinet',
      photos: [],
      videos: [],
      parts: [
        {
          name: 'Cartouche filtrante',
          reference: 'Variable selon mod√®le',
          quantity: 1,
          estimatedCost: 10,
        },
      ],
      estimatedDuration: 15,
      estimatedCost: 10,
      tags: ['Filtre', 'Eau', 'Qualit√©'],
      isOfficial: true,
      source: 'Bonnes pratiques camping-car',
      isUserContributed: false,
      status: 'approved',
    },
    {
      equipmentId: cuveEau._id,
      name: 'V√©rification du capteur de niveau d\'eau',
      type: 'test',
      priority: 'recommended',
      difficulty: 'easy',
      recurrence: {
        time: {
          value: 6,
          unit: 'months',
        },
      },
      conditions: [
        'Si affichage erron√©',
        'Avant la saison',
      ],
      description: 'Test du bon fonctionnement du capteur de niveau d\'eau propre.',
      instructions: '1. Vidanger compl√®tement la cuve\n2. V√©rifier l\'affichage : doit indiquer VIDE\n3. Remplir progressivement par paliers de 25%\n4. V√©rifier que l\'affichage suit la progression\n5. Si dysfonctionnement :\n   - Nettoyer les sondes du capteur\n   - V√©rifier les connexions √©lectriques\n   - Tester avec un multim√®tre si √©quip√©\n6. Remplacer le capteur si d√©faillant\n\nüí° Certains capteurs √† flotteur se nettoient facilement',
      photos: [],
      videos: [],
      parts: [],
      estimatedDuration: 20,
      estimatedCost: 0,
      tags: ['√âlectronique', 'Capteur', 'Diagnostic'],
      isOfficial: true,
      source: 'Bonnes pratiques camping-car',
      isUserContributed: false,
      status: 'approved',
    },
  ];

  // Ins√©rer toutes les maintenances
  const insertedMaintenances = await Maintenance.insertMany(maintenances);
  console.log(`‚úÖ ${insertedMaintenances.length} maintenances cr√©√©es`);

  // Afficher le r√©sum√©
  console.log('\nüìä R√©sum√© de l\'insertion:');
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
  console.log(`√âquipement: ${cuveEau.name}`);
  console.log(`ID: ${cuveEau._id}`);
  console.log('\nMaintenances:');
  insertedMaintenances.forEach((m, i) => {
    console.log(`  ${i + 1}. ${m.name} (${m.type} - ${m.priority})`);
  });
  console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');

} catch (error) {
  console.error('‚ùå Erreur lors de l\'insertion:', error);
} finally {
  await mongoose.disconnect();
  console.log('\n‚úÖ D√©connect√© de MongoDB');
}

